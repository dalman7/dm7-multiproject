
########################################################################################################################
# 스프링 기본설정
########################################################################################################################
spring:
  application:
    name: dm7-login

  # h2 콘솔 활성화 ( http://localhost:포트번호/h2-console 로 접근 가능)
  h2:
    console:
      enabled: true
      path: /h2-console
---

########################################################################################################################
# 서버 정보 설정 (일단 기본 8080 포트로)
########################################################################################################################
server:
  port: ${PORT:8080}

---

########################################################################################################################
# Thymleaf 설정
#  - 쓸지 안쓸지 모르겠지만 일단 oauth 설정때문에 해 두겠음.
########################################################################################################################
spring:
  thymeleaf:
    cache: false

---

spring:
  jpa:
    hibernate:
      ddl-auto: create    # create, update, create-drop, none 등의 옵션이 있습니다.
      use-new-id-generator-mappings: true
    generate-ddl: false   # DDl 생성 시 데이터베이스 고유의 기능 사용여부
    #show-sql: true        # 실행되는 쿼리문 보여주기 여부

oauthuser:
  datasource:
    jdbc-url: jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
    username: sa
    driver-class-name: org.h2.Driver

---

########################################################################################################################
# spring security 및 oauth2 설정
########################################################################################################################
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 788509745586-kt0v2ism2tvolve63epdigr13ercjdt2.apps.googleusercontent.com
            client-secret: D8OOnwixJM-mTxfFtWstg_MP
#          facebook:
#            client-id: TBD
#            client-secret: TBD
#          naver:
#            client-id: TBD
#            client-secret: TBD

---

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    #org.hibernate.stat: debug
    #org.hibernate.type: trace

---
########################################################################################################################
# Global Session 을 위해서 Redis 를 사용한다.
########################################################################################################################
spring:
  redis:
    host: 127.0.0.1
    port: 6379
    # password: password
  session:
    store-type: redis
    redis:
      flush-mode: on_save
      namespace: spring:session

